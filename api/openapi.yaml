# PASTE me here: https://editor-next.swagger.io/
openapi: 3.1.0
info:
  title: Quizzit REST
  description: |-
    Quizzit REST API specification.
    We also provide a Websocket interface for certain information, refer to the asyncapi.yml for these definitions.
    
    Some useful links:
    - [Quizzit repository](https://gitlab.mi.hdm-stuttgart.de/quizzit)
  contact:
    name: "H3rby7"
    email: "H3rby7@users.noreply.github.com"
    url: "https://github.com/h3rby7"
  license:
    name: MIT
    identifier: https://choosealicense.com/licenses/mit/
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local development
  - url: http://quizzit.local/api
    description: RaspberryPi in local network
paths:
  /health:
    get:
      operationId: healthGet
      tags:
        - system
      summary: Health Endpoint
      description: Is the service up and running?
      responses:
        '200':
          description: is healthy
        '500':
          description: something is off
  /settings/ui:
    get:
      operationId: settingsUiGet
      tags:
        - settings
      summary: Retrieve UI Settings
      description: Get the current UI Settings
      responses:
        '200':
          description: Successfully retrieved settings
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UI'
    post:
      operationId: settingsUiPost
      tags:
        - settings
      summary: Update Settings
      description: Update Settings with new values
      requestBody:
        $ref: '#/components/requestBodies/UI'
      responses:
        '200':
          description: 'patch applied'
  /settings/die:
    get:
      operationId: settingsDieGet
      tags:
        - settings
      summary: Retrieve Hybrid Die Settings
      description: Get the current Hybrid Die Settings
      responses:
        '200':
          description: Successfully retrieved settings
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/HybridDie'
    post:
      operationId: settingsDiePost
      tags:
        - settings
      summary: Set Hybrid Die Settings
      description: Set Hybrid Die Settings, like search timeout or if enabled
      requestBody:
        $ref: '#/components/requestBodies/HybridDie'
      responses:
        '200':
          description: 'patch applied'
  /settings/game:
    get:
      operationId: settingsGameGet
      tags:
        - settings
      summary: Retrieve Game Settings
      description: Get current game related settings like question catalog or points
      responses:
        '200':
          description: Successfully retrieved settings
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Game'
    post:
      operationId: settingsGamePost
      tags:
        - settings
      summary: Set Game Settings
      description: Set game related settings like question catalog or points
      requestBody:
        $ref: '#/components/requestBodies/Game'
      responses:
        '200':
          description: 'Settings applied'
  /questions/catalog:
    get:
      operationId: questionsCatalogGet
      tags:
        - questions
      summary: Retrieve Question catalog
      description: Get the available question lists
      responses:
        '200':
          description: Successfully retrieved catalog
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/QuestionCatalog'
  /game/stop:
    post:
      operationId: gameStopPost
      tags:
        - game
      summary: Stop Quizzit
      description: Reset all points, questions and go back to Welcome Screen
      responses:
        '200':
          description: Successfully stopped the game

components:
  schemas:
    Game:
      description: Game Settings
      type: object
      properties:
        scoredPointsToWin:
          description: How many points a player needs to win the game, values below '1' are ignored.
          type: integer
          default: -1
        questions:
          description: Filepath to the questions catalog to use, leave empty to make no change
          type: string
          default: ""
    HybridDie:
      description: Hybrid-Die Settings
      type: object
      properties:
        enabled:
          description: Is the Hybrid-Die enabled?
          type: boolean
          default: true
        search:
          description: Settings related to searching a hybrid-die
          type: object
          properties:
            timeout:
              description: Timeout as GOLANG duration string, leave empty to make no change
              type: string
              default: ""
    UI:
      description: Settings that affect only the UI and do nothing to the backend
      type: object
      additionalProperties:
        type: string
      examples:
        - "show-menu-button": "yes"
          "show-settings-button-in-menu": "no"
          "master-volume": "80"
    QuestionCatalogEntry:
      description: Entry in QuestionCatalog
      type: object
      properties:
        path:
          description: Path to the file containing the actual questions (and answers)
          type: string
        name:
          description: A name for this list of Questions
          type: string
        description:
          description: A short description for this list of questions
          type: string
      required:
        - path
        - name
        - description
      examples:
        - path: "./questions.json"
          name: "Example"
          description: "A fictional list of questions"
    QuestionCatalog:
      description: Catalog for Questions
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/QuestionCatalogEntry'
  requestBodies:
    UI:
      content:
        "application/json":
          schema:
            $ref: '#/components/schemas/UI'
    Game:
      content:
        "application/json":
          schema:
            $ref: '#/components/schemas/Game'
    HybridDie:
      content:
        "application/json":
          schema:
            $ref: '#/components/schemas/HybridDie'
